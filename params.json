{"name":"Njet-routing","tagline":"Routing for njet","body":"njet-routing [![Build Status](https://travis-ci.org/dariuszp/njet-routing.png?branch=master)](https://travis-ci.org/dariuszp/njet-routing)\r\n===\r\n\r\nRouting for njet\r\n\r\n## CHANGES 1.1.1\r\n- order for query string is alphabetical so providing parameters in different order wont change url\r\n- route can now specify port by either router.setPort() or by providing 4th argument to .generate()\r\n```JavaScript\r\nrouter.post.generate('my_route', {}, true, 8983); // http://example.com:8983\r\n```\r\n\r\nif for some reason you need to force port 80 in url, just set .forcePortInUrl(true) or false to disable\r\n\r\n##VERBS\r\n\r\n```JavaScript\r\nvar njetRouting = require('njet-routing'),\r\n    router = njetRouting.createRouter();\r\n```\r\n\r\nYou can use following verb methods:\r\n- get\r\n- post\r\n- put\r\n- delete\r\n- options\r\n- head\r\n- trace\r\n- connect\r\n- any\r\n\r\n###ADD ROUTE\r\n\r\nTo add route for any verb use *router.{verb}.add()* like this:\r\n\r\n```JavaScript\r\nrouter.post.add('create_user', '/user/{type}')\r\n```\r\n\r\nwhere type is variable passed to user. Default regexp for any variable is ([^/]+).\r\nVariable can have default value. Define it like this:\r\n\r\n```JavaScript\r\nrouter.post.add('create_user', '/user/{type | super me}')\r\n```\r\n\r\nIf you need specific pattern for \"type\", add it to third parameter - requirements:\r\n```JavaScript\r\nrouter.post.add('create_user', '/user/{type | super me}', {\r\n    type: [a-z]+\r\n})\r\n```\r\n\r\n*Remember*, default value will be trimmed to \"super me\" and it will be not affected by provided requirement for type.\r\n\r\nNow if \"type\" is not provided when generating url, default value will be \"super me\".\r\n\r\n##GET ROUTE\r\n\r\nTo retreive route, use get() method:\r\n\r\n```JavaScript\r\nvar route = router.post.get('create_user')\r\n```\r\n\r\n##GENERATE PATH\r\n\r\nTo generate url based on route name and arguments, use:\r\n\r\n```JavaScript\r\nvar route = router.post.generate('create_user', {\r\n    type: 'superman',\r\n    age: 26\r\n})\r\n```\r\n\r\nAny unused parameter will be added to url as query string. In this specific case it will be like this:\r\n```\r\n/user/superman?age=26\r\n```\r\n\r\nIf type is omitted while default parameter is defined, default parameter will be used.\r\nDefault argument is add as alternative to regexp in requirements so both will always match.\r\n\r\nIf you need absolute url, set third argument to true:\r\n```JavaScript\r\nvar route = router.post.generate('create_user', {\r\n    type: 'superman',\r\n    age: 26\r\n}, true)\r\n```\r\n\r\nThis will generate:\r\n```\r\nhttp://localhost/user/superman?age=26\r\n```\r\n\r\nTo change scheme, base url or host, use:\r\n- setHost()\r\n- setScheme()\r\n- setBaseUrl()\r\n\r\nLike this:\r\n```JavaScript\r\nrouter.setScheme('https').setHost('dariuszp.com').setBaseUrl('my/new');\r\nvar route = router.post.generate('create_user', {\r\n    type: 'superman',\r\n    age: 26\r\n}, true)\r\n```\r\n\r\nThis will generate:\r\n```\r\nhttps://dariuszp.com/my/new/user/superman?age=26\r\n```\r\n\r\n###MATCHING\r\n\r\nTo find out if your path match any route, use match for any method (verbs):\r\n\r\n```JavaScript\r\nrouter.post.match('/user/superman?age=26');\r\n```\r\n\r\n.match() return either false or result object. Result object have properties:\r\n- route - route object\r\n- routeParams - route in path extracted from given pattern\r\n- queryParams - params from query string\r\n- params - all params but *be aware* that if route param name match query param name, route param takes priority\r\n\r\nBy aware that match will check either specific verb routes or all routes. ANY is just another group of routes.\r\nMatching will not check any at any point. Programmer need to do it himself/herself.\r\n\r\n###Debugging\r\n\r\nTo get all routes, use .dump(method = false, byName = false) method. Dump accept two arguments:\r\n- method - dump only specific methods\r\n- byName - dump routes with names as keys","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}